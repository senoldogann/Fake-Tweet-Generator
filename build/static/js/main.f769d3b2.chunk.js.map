{"version":3,"sources":["icons.js","loaders.js","language.js","App.js","reportWebVitals.js","index.js"],"names":["ReplyIcon","color","width","height","fill","viewBox","aria-hidden","d","RetweetIcon","LikeIcon","ShareIcon","VerifiedIcon","aria-label","AvatarLoader","props","speed","backgroundColor","foregroundColor","cx","cy","r","language","tr","settings","name","username","quoteTweet","like","verified","yes","no","getInformation","buttonPlaceholder","createButton","downloadTweet","exampleTweetDescripton","en","tweetFormat","tweet","replace","formatNumber","number","String","split","slice","App","tweetRef","createRef","downloadRef","useState","setName","setUsername","isVerified","setIsVerified","setTweet","avatar","setAvatar","retweets","setRetweets","quoteTweets","setQuoteTweets","likes","setLikes","lang","setLang","useScreenshot","image","takeScreenshot","langText","setLangText","useEffect","current","click","className","htmlFor","type","value","onChange","e","target","maxLength","file","files","reader","FileReader","addEventListener","this","result","readAsDataURL","defaultValue","onClick","ref","href","download","placeholder","fetch","then","res","json","data","twitter","url","callback","outputFormat","canvas","document","createElement","ctx","getContext","img","Image","crossOrigin","onload","drawImage","dataURL","toDataURL","call","src","convertImgToBase64","profile_image_url_https","base64Image","screen_name","status","text","retweet_count","favorite_count","dangerouslySetInnerHTML","__html","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f769d3b2.chunk.js","sourcesContent":["const ReplyIcon = ({color,width,height}) => {\r\n    return (\r\n        <svg \r\n        fill={color || '#6e767d'} \r\n        width={width || 24}\r\n        height={height || 24}\r\n        viewBox=\"0 0 24 24\"\r\n        aria-hidden=\"true\">\r\n        \r\n        <g><path d=\"M14.046 2.242l-4.148-.01h-.002c-4.374 0-7.8 3.427-7.8 7.802 0 4.098 3.186 7.206 7.465 7.37v3.828c0 .108.044.286.12.403.142.225.384.347.632.347.138 0 .277-.038.402-.118.264-.168 6.473-4.14 8.088-5.506 1.902-1.61 3.04-3.97 3.043-6.312v-.017c-.006-4.367-3.43-7.787-7.8-7.788zm3.787 12.972c-1.134.96-4.862 3.405-6.772 4.643V16.67c0-.414-.335-.75-.75-.75h-.396c-3.66 0-6.318-2.476-6.318-5.886 0-3.534 2.768-6.302 6.3-6.302l4.147.01h.002c3.532 0 6.3 2.766 6.302 6.296-.003 1.91-.942 3.844-2.514 5.176z\"></path></g></svg>\r\n    );\r\n};\r\n\r\n\r\nconst RetweetIcon = ({color,width,height}) => {\r\n    return (\r\n        <svg \r\n        fill={color || '#6e767d'} \r\n        width={width || 24}\r\n        height={height || 24}\r\n        viewBox=\"0 0 24 24\" \r\n        aria-hidden=\"true\">\r\n        \r\n        <g><path d=\"M23.77 15.67c-.292-.293-.767-.293-1.06 0l-2.22 2.22V7.65c0-2.068-1.683-3.75-3.75-3.75h-5.85c-.414 0-.75.336-.75.75s.336.75.75.75h5.85c1.24 0 2.25 1.01 2.25 2.25v10.24l-2.22-2.22c-.293-.293-.768-.293-1.06 0s-.294.768 0 1.06l3.5 3.5c.145.147.337.22.53.22s.383-.072.53-.22l3.5-3.5c.294-.292.294-.767 0-1.06zm-10.66 3.28H7.26c-1.24 0-2.25-1.01-2.25-2.25V6.46l2.22 2.22c.148.147.34.22.532.22s.384-.073.53-.22c.293-.293.293-.768 0-1.06l-3.5-3.5c-.293-.294-.768-.294-1.06 0l-3.5 3.5c-.294.292-.294.767 0 1.06s.767.293 1.06 0l2.22-2.22V16.7c0 2.068 1.683 3.75 3.75 3.75h5.85c.414 0 .75-.336.75-.75s-.337-.75-.75-.75z\"></path></g></svg>\r\n    );\r\n};\r\n\r\n\r\nconst LikeIcon = ({color,width,height}) => {\r\n    return(\r\n        <svg \r\n        fill={color || '#6e767d'} \r\n        width={width || 24}\r\n        height={height || 24} \r\n        viewBox=\"0 0 24 24\" \r\n        aria-hidden=\"true\">\r\n        \r\n        <g><path d=\"M12 21.638h-.014C9.403 21.59 1.95 14.856 1.95 8.478c0-3.064 2.525-5.754 5.403-5.754 2.29 0 3.83 1.58 4.646 2.73.814-1.148 2.354-2.73 4.645-2.73 2.88 0 5.404 2.69 5.404 5.755 0 6.376-7.454 13.11-10.037 13.157H12zM7.354 4.225c-2.08 0-3.903 1.988-3.903 4.255 0 5.74 7.034 11.596 8.55 11.658 1.518-.062 8.55-5.917 8.55-11.658 0-2.267-1.823-4.255-3.903-4.255-2.528 0-3.94 2.936-3.952 2.965-.23.562-1.156.562-1.387 0-.014-.03-1.425-2.965-3.954-2.965z\"></path></g></svg>\r\n    );\r\n};\r\n\r\nconst ShareIcon = ({color,width,height}) => {\r\n    return (\r\n        <svg\r\n        fill={color || '#6e767d'} \r\n        width={width || 24}\r\n        height={height || 24} \r\n        viewBox=\"0 0 24 24\" \r\n        aria-hidden=\"true\">\r\n            \r\n        <g><path d=\"M17.53 7.47l-5-5c-.293-.293-.768-.293-1.06 0l-5 5c-.294.293-.294.768 0 1.06s.767.294 1.06 0l3.72-3.72V15c0 .414.336.75.75.75s.75-.336.75-.75V4.81l3.72 3.72c.146.147.338.22.53.22s.384-.072.53-.22c.293-.293.293-.767 0-1.06z\"></path><path d=\"M19.708 21.944H4.292C3.028 21.944 2 20.916 2 19.652V14c0-.414.336-.75.75-.75s.75.336.75.75v5.652c0 .437.355.792.792.792h15.416c.437 0 .792-.355.792-.792V14c0-.414.336-.75.75-.75s.75.336.75.75v5.652c0 1.264-1.028 2.292-2.292 2.292z\"></path></g></svg>\r\n    );\r\n};\r\n\r\nconst VerifiedIcon = ({color,width,height}) => {\r\n    return (\r\n        <svg \r\n        fill={color || '#fff'} \r\n        width={width || 19}\r\n        height={height || 19} \r\n        viewBox=\"0 0 26 26\" \r\n        aria-label=\"Verified account\">\r\n        \r\n        <g><path d=\"M22.5 12.5c0-1.58-.875-2.95-2.148-3.6.154-.435.238-.905.238-1.4 0-2.21-1.71-3.998-3.818-3.998-.47 0-.92.084-1.336.25C14.818 2.415 13.51 1.5 12 1.5s-2.816.917-3.437 2.25c-.415-.165-.866-.25-1.336-.25-2.11 0-3.818 1.79-3.818 4 0 .494.083.964.237 1.4-1.272.65-2.147 2.018-2.147 3.6 0 1.495.782 2.798 1.942 3.486-.02.17-.032.34-.032.514 0 2.21 1.708 4 3.818 4 .47 0 .92-.086 1.335-.25.62 1.334 1.926 2.25 3.437 2.25 1.512 0 2.818-.916 3.437-2.25.415.163.865.248 1.336.248 2.11 0 3.818-1.79 3.818-4 0-.174-.012-.344-.033-.513 1.158-.687 1.943-1.99 1.943-3.484zm-6.616-3.334l-4.334 6.5c-.145.217-.382.334-.625.334-.143 0-.288-.04-.416-.126l-.115-.094-2.415-2.415c-.293-.293-.293-.768 0-1.06s.768-.294 1.06 0l1.77 1.767 3.825-5.74c.23-.345.696-.436 1.04-.207.346.23.44.696.21 1.04z\"></path></g></svg>\r\n    )\r\n}\r\n\r\nexport {ReplyIcon,RetweetIcon,LikeIcon,ShareIcon,VerifiedIcon};","import React from 'react';\r\nimport ContentLoader from \"react-content-loader\"\r\n\r\nconst AvatarLoader = (props) => (\r\n    <ContentLoader \r\n      speed={2}\r\n      width={48}\r\n      height={48}\r\n      viewBox=\"0 0 60 48\"\r\n      backgroundColor=\"#333\"\r\n      foregroundColor=\"#444\"\r\n      {...props}\r\n    >\r\n \r\n      <circle cx=\"24\" cy=\"24\" r=\"24\" />\r\n    </ContentLoader>\r\n  )\r\n  \r\n  export  {AvatarLoader};","const tr = {\r\n    settings: 'Tweet Ayarları',\r\n    name:'Ad Soyad',\r\n    username: 'Kullanıcı adı',\r\n    quoteTweet:\"Alıntı Tweet\",\r\n    like: 'Beğeni',\r\n    verified: \"Doğrulanmış Hesap\",\r\n    yes:\"Evet\",\r\n    no:\"Hayır\",\r\n    getInformation:\"Bilgileri Çek\",\r\n    buttonPlaceholder:\"Twitter Kullanıcı adını yazın\",\r\n    createButton:\"Oluştur\",\r\n    downloadTweet:\"Tweeti indir\",\r\n    exampleTweetDescripton:\"Bu alana örnek tweet gelecek\"\r\n}\r\n\r\nconst en = {\r\n    settings: 'Tweet Settings',\r\n    name:'Name Surname',\r\n    username: 'Username',\r\n    quoteTweet:\"Quote Tweet\",\r\n    like: 'Like',\r\n    verified: \"Verified Account\",\r\n    yes:\"Yes\",\r\n    no:\"No\",\r\n    getInformation:\"Get Information\",\r\n    buttonPlaceholder:\"Type Twitter Username\",\r\n    createButton:\"Create\",\r\n    downloadTweet:\"Download Tweet\",\r\n    exampleTweetDescripton:\"Example tweets will come in this field\"\r\n}\r\n\r\nconst language ={\r\n    tr,\r\n    en\r\n}\r\n\r\nexport {language};","import React,{useState,createRef,useEffect} from \"react\";\nimport './App.scss';\nimport {ReplyIcon,RetweetIcon,LikeIcon,ShareIcon,VerifiedIcon} from \"./icons\";\nimport {AvatarLoader} from './loaders';\nimport { useScreenshot } from 'use-react-screenshot'\nimport {language} from './language';\n\n\nfunction convertImgToBase64(url, callback, outputFormat){\n\tvar canvas = document.createElement('CANVAS');\n\tvar ctx = canvas.getContext('2d');\n\tvar img = new Image;\n\timg.crossOrigin = 'Anonymous';\n\timg.onload = function(){\n\t\tcanvas.height = img.height;\n\t\tcanvas.width = img.width;\n\t  \tctx.drawImage(img,0,0);\n\t  \tvar dataURL = canvas.toDataURL(outputFormat || 'image/png');\n\t  \tcallback.call(this, dataURL);\n        // Clean up\n\t  \tcanvas = null; \n\t};\n\timg.src = url;\n}\n  \n\n// Linkleri kullanıcı adlarını ve etiketleri dinamik olarak mavi almak için yazılan kodlar\nconst tweetFormat = tweet => {\n  tweet = tweet\n  .replace(/@([\\w]+)/g,'<span>@$1</span>')\n  .replace(/#([\\wşçöğüıİ]+)/gi,'<span>#$1</span>')\n  .replace(/(https?:\\/\\/[\\w\\.\\/]+)/,'<span>$1</span>')\n  return tweet;\n}\n\nconst formatNumber = number => {\n  if(!number){\n    number=0\n  }\n  if(number < 1000){\n    return number;\n  }\n  number /= 1000;\n  number = String(number).split(`.`);\n  return number[0] +  (number[1] > 100 ? `,` + number[1].slice(0,1) + ' B' : ' B')\n}\n\nexport default function App() {\n  const tweetRef = createRef(null)\n  const downloadRef = createRef();\n  const [name,setName] = useState();\n  const [username,setUsername] = useState();\n  const [isVerified, setIsVerified] = useState(0);\n  const [tweet, setTweet] = useState();\n  const [avatar,setAvatar] = useState();\n  const [retweets,setRetweets] = useState(0);\n  const [quoteTweets, setQuoteTweets] = useState(0);\n  const [likes, setLikes] = useState(0);\n  const [lang,setLang] = useState(\"tr\");\n  const [image, takeScreenshot] = useScreenshot();\n  const [langText,setLangText] = useState();\n  const getImage = () => takeScreenshot(tweetRef.current)\n\n  useEffect(() => {\n    setLangText(language[lang]);\n  },[lang]);\n\n  useEffect(() => {\n  if(image){\n    downloadRef.current.click();\n  }\n  },[image]);\n\n  const avatarHandle = (e) => {\n      const file = e.target.files[0];\n      const reader = new FileReader();\n      reader.addEventListener('load',function(){\n        setAvatar(this.result);\n      })\n      reader.readAsDataURL(file);\n  };\n\n  const fetchTwitterInfo = () => {\n    fetch(`https://typeahead-js-twitter-api-proxy.herokuapp.com/demo/search?q=${username}`)\n    .then(res => res.json())\n    .then(data => {\n      const twitter = data[0];\n\n      convertImgToBase64(twitter.profile_image_url_https,function(\n        base64Image\n        ){\n          setAvatar(base64Image);\n        })\n      setName(twitter.name);\n      setUsername(twitter.screen_name);\n      setTweet(twitter.status.text);\n      setRetweets(twitter.status.retweet_count);\n      setLikes(twitter.status.favorite_count);\n\n    });\n  }\n\n  return (\n    <>\n    <div className=\"tweet-settings\">\n      <h3>{langText?.settings}</h3>\n      <ul>\n        <li>\n          <label htmlFor=\"\">{langText?.name}</label>\n          <input\n           type=\"text\" \n           className=\"input\" \n           value={name}\n           onChange={(e) => setName(e.target.value)}/>\n        </li>\n        <li>\n        <label htmlFor=\"\">{langText?.username}</label>\n        <input\n           type=\"text\" \n           className=\"input\" \n           value={username}\n           onChange={(e) => setUsername(e.target.value)}/>\n        </li>\n\n        <li>\n        <label htmlFor=\"\">Tweet</label>\n          <textarea\n          className=\"textarea\"\n          maxLength=\"290\"\n          value={tweet}\n          onChange={(e) => setTweet(e.target.value)}/>\n        </li>\n\n        <li>\n          <label htmlFor=\"\">Avatar</label>\n          <input\n           type=\"file\" \n           className=\"input\" \n           onChange={avatarHandle}/>\n        </li>\n\n        <li>\n        <label htmlFor=\"\">Retweet</label>\n          <input\n           type=\"number\" \n           className=\"input\" \n           value={retweets}\n           onChange={(e) => setRetweets(e.target.value)}/>\n        </li>\n\n        <li>\n        <label htmlFor=\"\">{langText?.quoteTweet}</label>\n          <input\n           type=\"number\" \n           className=\"input\" \n           value={quoteTweets}\n           onChange={(e) => setQuoteTweets(e.target.value)}/>\n        </li>\n\n        <li>\n        <label htmlFor=\"\">{langText?.like}</label>\n          <input\n           type=\"number\" \n           className=\"input\" \n           value={likes}\n           onChange={(e) => setLikes(e.target.value)}/>\n        </li>\n\n        <li>\n        <label htmlFor=\"\">{langText?.verified}</label>\n          <select onChange={(e) => setIsVerified(e.target.value)} defaultValue={isVerified}>\n            <option value=\"1\">{langText?.yes}</option>\n            <option value=\"0\">{langText?.no}</option>\n          </select>\n        </li>\n\n        <button onClick={getImage}>{langText?.createButton}</button>\n        <div className=\"download-url\">\n          {image && (<a ref={downloadRef} href={image} download=\"tweet.png\">{langText?.downloadTweet}</a>)}\n        </div>\n      </ul>\n    </div>\n    <div className=\"tweet-container\"> \n      <div className=\"app-language\">\n        <span onClick={() => setLang('tr')} className={lang === 'tr' && 'active'}>Türkçe</span>\n        <span onClick={() => setLang('en')} className={lang === 'en' && 'active'}>English</span>\n      </div>\n      <div className=\"fetch-info\">\n        <input \n        type=\"text\" \n        value={username} \n        onChange={e => \n        setUsername(e.target.value)} \n        placeholder={langText?.buttonPlaceholder}/>\n        <button onClick={fetchTwitterInfo}>{langText?.getInformation}</button>\n      </div>\n\n    <div className=\"tweet\" ref={tweetRef} >\n        <div className=\"tweet-author\">\n         {(avatar && <img src={avatar}  />) || <AvatarLoader/>}\n          <div>\n          <div className=\"name\">{name || `${langText?.name}`} {isVerified == 1 && <VerifiedIcon />}</div>\n          <div className=\"username\">@{username || `${langText?.username}`}</div>\n          </div>\n        </div>\n       <div className=\"tweet-content\">\n         <p dangerouslySetInnerHTML={{__html: tweet && tweetFormat(tweet)||`${langText?.exampleTweetDescripton}`}} ></p>\n       </div>\n\n       <div className=\"tweet-stats\">\n         <span><b>{formatNumber(retweets)}</b> Retweet</span>\n         <span><b>{formatNumber(quoteTweets)}</b> {langText?.quoteTweet}</span>\n         <span><b>{formatNumber(likes)}</b> {langText?.like}</span>\n       </div>\n       <div className=\"tweet-actions\">\n         <span>{<ReplyIcon />}</span>\n         <span>{<RetweetIcon />}</span>\n         <span>{<LikeIcon />}</span>\n         <span>{<ShareIcon />}</span>\n       </div>\n    </div>\n    </div>\n    </>\n  );\n}\n \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}